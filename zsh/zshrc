export TERM=xterm-256color
export LANG=en_US.UTF-8

which starship >/dev/null
if [[ $? -eq 0 ]]; then
  # 重复source ~/.zshrc 会有问题
  # https://github.com/starship/starship/issues/3418
  eval "$(starship init zsh)"
else
  export PS1='%(!.%{$fg[red]%}.%{$fg[green]%})%1~%{$fg_bold[blue]%}$(git_prompt_info)%{$reset_color%} '
  export RPROMPT='%n@%m %*'
fi

setopt vi
setopt NO_HUP
setopt rmstarsilent  ## supress warning when `rm -rf *` "zsh: sure you want to delete all the files in ... [yn]"?

function append_path() {
  for p in $@; do
    [[ -d $p ]] && [[ ! $PATH =~ $p ]] && export PATH=$p:$PATH
  done
}

function source_path() {
  for p in $@; do
    [[ -f $p ]] && source $p
  done
}

## use ${2-n} one by one to replace $1
function replace() {
  src=$1
  shift 1
  for cmd in $@; do
    which $cmd >/dev/null
    if [[ $? -eq 0 ]]; then
      alias $src=$cmd
      return 0
    fi
  done

  return 1
}

append_path /sbin /usr/sbin /usr/local/sbin
append_path /opt/homebrew/bin  ## homebrew for arm mac
append_path /home/linuxbrew/.linuxbrew/bin  ## homebrew in linux
append_path $HOME/.cargo/bin      ## rust
append_path $HOME/bin ## blade
append_path $HOME/.local/bin  ## pytest
export PATH="/opt/homebrew/opt/mysql@8.4/bin:$PATH"

source_path $HOME/git/dotfiles/zsh/env.zsh
source_path $HOME/git/work/conf/zshrc # enterprise

# TODO
append_path $HOME/opt/protoc/bin  ## protoc + protoc-gen-go

if [[ `uname` == "Darwin" ]]; then
  alias sha256="shasum -a 256"
fi

replace vi nvim vim
alias vimdiff="vi -d"

replace fd fdfind
replace ls lsd
alias ll="ls -l"

export no_proxy="localhost,127.0.0.1"

# fzf
eval "$(fzf --zsh)"  ## available in fzf 0.48.0 or later.
# [FZF newcomer: fd or ripgrep?](https://www.reddit.com/r/linux4noobs/comments/egb644/fzf_newcomer_fd_or_ripgrep/)
# CTRL-T: Paste the selected files and directories onto the command-line
# CTRL-R: Paste the selected command from history onto the command-lin
# ALT-C: cd into the selected directory, option+c on MacOS
export FZF_DEFAULT_COMMAND='fd --hidden'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"  # to apply the command to CTRL-T as well
export FZF_ALT_C_COMMAND="fd --type d --hidden"

## use fd to list path candidates for ** completion
function _fzf_compgen_path() {
  fd --hidden . "$1"
}

## use fd to generate the list for directory completion
function _fzf_compgen_dir() {
  fd --type d --hidden . "$1"
}

# autojump
which zoxide >/dev/null
if [[ $? -eq 0 ]]; then
  eval "$(zoxide init zsh)"
fi

# git
export LESS="-F -X $LESS"  ## tells 'less' not to paginate if less than a page

# blade
## shopt is not a command, but a shell built-in. bash knows what to do with it because it's a bash built-in, but zsh has no idea what it is.
alias shopt="$HOME/git/dotfiles/zsh/shopt"
## blade 用的还是bash
autoload -U +X bashcompinit && bashcompinit
autoload -U +X compinit && compinit
source_path $HOME/bin/bladefunctions  ## 依赖shopt, 需要放在之后

alias bb="blade build"
alias bt="blade test"
alias br="blade run"

ulimit -c unlimited

# golang
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"
export GOTMPDIR="/tmp/go"
if [ ! -d $GOTMPDIR ]; then
  mkdir $GOTMPDIR
fi
append_path $GOBIN

export GO111MODULE=on
export GOPROXY="https://goproxy.cn|https://proxy.golang.org|direct"
export GOSUMDB="sum.golang.google.cn"

replace go22 go1.22.8
replace go23 go1.23.7
if [[ `uname` == "Linux" ]]; then
  export GOROOT=$(go1.22.8 env GOROOT)
else
  export GOROOT=$(go1.22.8 env GOROOT)
fi
append_path $GOROOT/bin

# Added by LM Studio CLI (lms)
export PATH="$PATH:$HOME/.cache/lm-studio/bin"

if [ -d ~/.docker/completions ]; then
  # The following lines have been added by Docker Desktop to enable Docker CLI completions.
  fpath=(/Users/bytedance/.docker/completions $fpath)
  autoload -Uz compinit
  compinit
fi

source_path $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source_path $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# source_path $(brew --prefix)/share/zsh-history-substring-search/zsh-history-substring-search.zsh

if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
  autoload -Uz compinit
  compinit
fi

HISTFILE=$HOME/.zsh_history
SAVEHIST=5000  ## 历史记录文件中最多能保存n条记录
HISTSIZE=5000  ## 在当前zsh 会话中,内存里最多可保存n条记录

setopt HIST_IGNORE_DUPS  ## 忽略连续重复的命令
setopt SHARE_HISTORY  ## 不同的zsh 会话之间实时共享命令历史记录
setopt HIST_FCNTL_LOCK  ## 文件锁
setopt EXTENDED_HISTORY  ## 记录时间, format: $timestamp:cost_sec;cmd
setopt APPEND_HISTORY  ## 添加历史记录, 而非覆盖
setopt INC_APPEND_HISTORY  ## 立即更新历史记录
setopt HIST_FIND_NO_DUPS  ## 浏览时跳过重复记录
setopt HIST_REDUCE_BLANKS  ## 记录到历史文件之前,自动删除命令行中的多余空白字符,包括开头,结尾以及连续的空白字符序列

