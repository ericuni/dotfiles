if [ -f ~/git/dotfiles/zsh/antigen.zsh ]; then
  source ~/git/dotfiles/zsh/antigen.zsh

  antigen use oh-my-zsh

  antigen bundle command-not-found
  antigen bundle zsh-users/zsh-autosuggestions
  antigen bundle zsh-users/zsh-completions
  antigen bundle zsh-users/zsh-syntax-highlighting
  antigen bundle ael-code/zsh-colored-man-pages

  antigen theme simple

  antigen apply
fi

export TERM=xterm-256color
export LANG=en_US.UTF-8

which starship >/dev/null
if [[ $? -eq 0 ]]; then
  # 重复source ~/.zshrc 会有问题
  # https://github.com/starship/starship/issues/3418
  eval "$(starship init zsh)"
else
  export PS1='%(!.%{$fg[red]%}.%{$fg[green]%})%1~%{$fg_bold[blue]%}$(git_prompt_info)%{$reset_color%} '
  export RPROMPT='%n@%m %*'
fi

setopt vi
setopt NO_HUP
setopt rmstarsilent  ## supress warning when `rm -rf *` "zsh: sure you want to delete all the files in ... [yn]"?

function append_path() {
  for p in $@; do
    [[ -d $p ]] && [[ ! $PATH =~ $p ]] && export PATH=$p:$PATH
  done
}

function source_path() {
  for p in $@; do
    [[ -f $p ]] && source $p
  done
}

## use ${2-n} one by one to replace $1
function replace() {
  src=$1
  shift 1
  for cmd in $@; do
    which $cmd >/dev/null
    if [[ $? -eq 0 ]]; then
      alias $src=$cmd
      return 0
    fi
  done

  return 1
}

append_path /sbin /usr/sbin /usr/local/sbin
append_path /opt/homebrew/bin  ## homebrew for arm mac
append_path /home/linuxbrew/.linuxbrew/bin  ## homebrew in linux
append_path $HOME/.cargo/bin      ## rust

source_path $HOME/git/dotfiles/zsh/env.zsh
source_path $HOME/git/work/conf/zshrc # enterprise

# TODO
append_path $HOME/.local/bin
append_path $HOME/opt/protoc/bin  ## protoc + protoc-gen-go

if [[ `uname` == "Darwin" ]]; then
  alias sha256="shasum -a 256"
fi

replace vi nvim vim
replace vim vi
alias vimdiff="vi -d"

replace fd fdfind
replace ls lsd
alias ll="ls -l"

export no_proxy="localhost,127.0.0.1"

# fzf
eval "$(fzf --zsh)"  ## available in fzf 0.48.0 or later.
# [FZF newcomer: fd or ripgrep?](https://www.reddit.com/r/linux4noobs/comments/egb644/fzf_newcomer_fd_or_ripgrep/)
# CTRL-T: Paste the selected files and directories onto the command-line
# CTRL-R: Paste the selected command from history onto the command-lin
# ALT-C: cd into the selected directory, option+c on MacOS
export FZF_DEFAULT_COMMAND='fd --hidden'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"  # to apply the command to CTRL-T as well
export FZF_ALT_C_COMMAND="fd --type d --hidden"

## use fd to list path candidates for ** completion
function _fzf_compgen_path() {
  fd --hidden . "$1"
}

## use fd to generate the list for directory completion
function _fzf_compgen_dir() {
  fd --type d --hidden . "$1"
}

# autojump
which zoxide >/dev/null
if [[ $? -eq 0 ]]; then
  eval "$(zoxide init zsh)"
fi

# git
export LESS="-F -X $LESS"  ## tells 'less' not to paginate if less than a page

# blade
source_path $HOME/bin/bladefunctions
alias bb="blade build"
alias bt="blade test"
alias br="blade run"

ulimit -c unlimited

## shopt is not a command, but a shell built-in. bash knows what to do with it because it's a bash built-in, but zsh has no idea what it is.
alias shopt="$HOME/git/dotfiles/zsh/shopt"

# golang
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"
export GOTMPDIR="/tmp/go"
if [ ! -d $GOTMPDIR ]; then
  mkdir $GOTMPDIR
fi
append_path $GOBIN

export GO111MODULE=on
export GOPROXY="https://goproxy.cn|https://proxy.golang.org|direct"
export GOSUMDB="sum.golang.google.cn"

if [[ `uname` == "Linux" ]]; then
  export GOROOT=$(go1.22.8 env GOROOT)
else
  export GOROOT=$(go1.22.8 env GOROOT)
fi
append_path $GOROOT/bin

# venv: python virtual env
if [ -f $HOME/opt/python/bin/activate ]; then
  source $HOME/opt/python/bin/activate
fi

# Added by LM Studio CLI (lms)
export PATH="$PATH:$HOME/.cache/lm-studio/bin"

if [ -d ~/.docker/completions ]; then
  # The following lines have been added by Docker Desktop to enable Docker CLI completions.
  fpath=(/Users/bytedance/.docker/completions $fpath)
  autoload -Uz compinit
  compinit
fi

